"""create room management tables

Revision ID: 7e9c9e06312a
Revises: 68c5741a279c
Create Date: 2025-10-13 20:26:49.735827+07:00

"""
from typing import Sequence, Union
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7e9c9e06312a'
down_revision: Union[str, None] = '68c5741a279c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('room_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('amenities', sa.JSON(), nullable=True),
    sa.Column('max_guests', sa.Integer(), nullable=False),
    sa.Column('bed_type', sa.String(length=50), nullable=True),
    sa.Column('room_size_sqm', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_room_types_id'), 'room_types', ['id'], unique=False)
    op.create_index(op.f('ix_room_types_is_active'), 'room_types', ['is_active'], unique=False)
    op.create_index(op.f('ix_room_types_name'), 'room_types', ['name'], unique=True)
    op.create_table('room_rates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('room_type_id', sa.Integer(), nullable=False),
    sa.Column('stay_type', sa.Enum('OVERNIGHT', 'TEMPORARY', name='staytype'), nullable=False),
    sa.Column('rate', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('effective_from', sa.Date(), nullable=False),
    sa.Column('effective_to', sa.Date(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['room_type_id'], ['room_types.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('room_type_id', 'stay_type', 'effective_from', name='uk_room_rates')
    )
    op.create_index(op.f('ix_room_rates_effective_from'), 'room_rates', ['effective_from'], unique=False)
    op.create_index(op.f('ix_room_rates_effective_to'), 'room_rates', ['effective_to'], unique=False)
    op.create_index(op.f('ix_room_rates_id'), 'room_rates', ['id'], unique=False)
    op.create_index(op.f('ix_room_rates_is_active'), 'room_rates', ['is_active'], unique=False)
    op.create_index(op.f('ix_room_rates_room_type_id'), 'room_rates', ['room_type_id'], unique=False)
    op.create_table('rooms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('room_number', sa.String(length=10), nullable=False),
    sa.Column('room_type_id', sa.Integer(), nullable=False),
    sa.Column('floor', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('AVAILABLE', 'OCCUPIED', 'CLEANING', 'RESERVED', 'OUT_OF_SERVICE', name='roomstatus'), nullable=False),
    sa.Column('qr_code', sa.String(length=255), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['room_type_id'], ['room_types.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('qr_code')
    )
    op.create_index(op.f('ix_rooms_floor'), 'rooms', ['floor'], unique=False)
    op.create_index(op.f('ix_rooms_id'), 'rooms', ['id'], unique=False)
    op.create_index(op.f('ix_rooms_is_active'), 'rooms', ['is_active'], unique=False)
    op.create_index(op.f('ix_rooms_room_number'), 'rooms', ['room_number'], unique=True)
    op.create_index(op.f('ix_rooms_room_type_id'), 'rooms', ['room_type_id'], unique=False)
    op.create_index(op.f('ix_rooms_status'), 'rooms', ['status'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_rooms_status'), table_name='rooms')
    op.drop_index(op.f('ix_rooms_room_type_id'), table_name='rooms')
    op.drop_index(op.f('ix_rooms_room_number'), table_name='rooms')
    op.drop_index(op.f('ix_rooms_is_active'), table_name='rooms')
    op.drop_index(op.f('ix_rooms_id'), table_name='rooms')
    op.drop_index(op.f('ix_rooms_floor'), table_name='rooms')
    op.drop_table('rooms')
    op.drop_index(op.f('ix_room_rates_room_type_id'), table_name='room_rates')
    op.drop_index(op.f('ix_room_rates_is_active'), table_name='room_rates')
    op.drop_index(op.f('ix_room_rates_id'), table_name='room_rates')
    op.drop_index(op.f('ix_room_rates_effective_to'), table_name='room_rates')
    op.drop_index(op.f('ix_room_rates_effective_from'), table_name='room_rates')
    op.drop_table('room_rates')
    op.drop_index(op.f('ix_room_types_name'), table_name='room_types')
    op.drop_index(op.f('ix_room_types_is_active'), table_name='room_types')
    op.drop_index(op.f('ix_room_types_id'), table_name='room_types')
    op.drop_table('room_types')
    # ### end Alembic commands ###
